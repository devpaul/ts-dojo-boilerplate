{"version":3,"file":"encoding.js","sourceRoot":"","sources":["../../src/encoding.ts"],"names":[],"mappings":"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","sourcesContent":["import { HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX, LOW_SURROGATE_MIN, LOW_SURROGATE_MAX } from 'dojo-shim/string';\n\nconst BASE64_KEYSTR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction decodeUtf8EncodedCodePoint(codePoint: number, validationRange: number[] = [ 0, Infinity ], checkSurrogate?: boolean): string {\n\tif (codePoint < validationRange[0] || codePoint > validationRange[1]) {\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tif (checkSurrogate && codePoint >= HIGH_SURROGATE_MIN && codePoint <= LOW_SURROGATE_MAX) {\n\t\tthrow Error('Surrogate is not a scalar value');\n\t}\n\n\tlet encoded = '';\n\n\tif (codePoint > 0xFFFF) {\n\t\tcodePoint -= 0x010000;\n\t\tencoded += String.fromCharCode(codePoint >>> 0x10 & 0x03FF | HIGH_SURROGATE_MIN);\n\t\tcodePoint = LOW_SURROGATE_MIN | codePoint & 0x03FF;\n\t}\n\n\tencoded += String.fromCharCode(codePoint);\n\n\treturn encoded;\n}\n\nfunction validateUtf8EncodedCodePoint(codePoint: number): void {\n\tif ((codePoint & 0xC0) !== 0x80) {\n\t\tthrow Error('Invalid continuation byte');\n\t}\n}\n\nexport type ByteBuffer = Uint8Array | Buffer | number[];\n\nexport interface Codec {\n\tencode(data: string): number[];\n\tdecode(data: ByteBuffer): string;\n}\n\n/**\n * Provides facilities for encoding a string into an ASCII-encoded byte buffer and\n * decoding an ASCII-encoded byte buffer into a string.\n */\nexport const ascii: Codec = {\n\t/**\n\t * Encodes a string into an ASCII-encoded byte buffer.\n\t *\n\t * @param data The text string to encode\n\t */\n\tencode(data: string): number[] {\n\t\tif (data == null) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst buffer: number[] = [];\n\n\t\tfor (let i = 0, length = data.length; i < length; i++) {\n\t\t\tbuffer[i] = data.charCodeAt(i);\n\t\t}\n\n\t\treturn buffer;\n\t},\n\n\t/**\n\t * Decodes an ASCII-encoded byte buffer into a string.\n\t *\n\t * @param data The byte buffer to decode\n\t */\n\tdecode(data: ByteBuffer): string {\n\t\tif (data == null) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet decoded = '';\n\n\t\tfor (let i = 0, length = data.length; i < length; i++) {\n\t\t\tdecoded += String.fromCharCode(data[i]);\n\t\t}\n\n\t\treturn decoded;\n\t}\n};\n\n/**\n * Provides facilities for encoding a string into a Base64-encoded byte buffer and\n * decoding a Base64-encoded byte buffer into a string.\n */\nexport const base64: Codec = {\n\t/**\n\t * Encodes a Base64-encoded string into a Base64 byte buffer.\n\t *\n\t * @param data The Base64-encoded string to encode\n\t */\n\tencode(data: string): number[] {\n\t\tif (data == null) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst buffer: number[] = [];\n\n\t\tlet i = 0;\n\t\tlet length = data.length;\n\n\t\twhile (data[--length] === '=') { }\n\t\twhile (i < length) {\n\t\t\tlet encoded = BASE64_KEYSTR.indexOf(data[i++]) << 18;\n\t\t\tif (i <= length) {\n\t\t\t\tencoded |= BASE64_KEYSTR.indexOf(data[i++]) << 12;\n\t\t\t}\n\t\t\tif (i <= length) {\n\t\t\t\tencoded |= BASE64_KEYSTR.indexOf(data[i++]) << 6;\n\t\t\t}\n\t\t\tif (i <= length) {\n\t\t\t\tencoded |= BASE64_KEYSTR.indexOf(data[i++]);\n\t\t\t}\n\n\t\t\tbuffer.push((encoded >>> 16) & 0xff);\n\t\t\tbuffer.push((encoded >>> 8) & 0xff);\n\t\t\tbuffer.push(encoded & 0xff);\n\t\t}\n\n\t\twhile (buffer[buffer.length - 1] === 0) {\n\t\t\tbuffer.pop();\n\t\t}\n\n\t\treturn buffer;\n\t},\n\n\t/**\n\t * Decodes a Base64-encoded byte buffer into a Base64-encoded string.\n\t *\n\t * @param data The byte buffer to decode\n\t */\n\tdecode(data: ByteBuffer): string {\n\t\tif (data == null) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet decoded = '';\n\t\tlet i = 0;\n\n\t\tfor (let length = data.length - (data.length % 3); i < length; ) {\n\t\t\tlet encoded = data[i++] << 16 | data[i++] << 8 | data[i++];\n\n\t\t\tdecoded += BASE64_KEYSTR.charAt((encoded >>> 18) & 0x3F);\n\t\t\tdecoded += BASE64_KEYSTR.charAt((encoded >>> 12) & 0x3F);\n\t\t\tdecoded += BASE64_KEYSTR.charAt((encoded >>> 6) & 0x3F);\n\t\t\tdecoded += BASE64_KEYSTR.charAt(encoded & 0x3F);\n\t\t}\n\n\t\tif (data.length % 3 === 1) {\n\t\t\tlet encoded = data[i++] << 16;\n\t\t\tdecoded += BASE64_KEYSTR.charAt((encoded >>> 18) & 0x3f);\n\t\t\tdecoded += BASE64_KEYSTR.charAt((encoded >>> 12) & 0x3f);\n\t\t\tdecoded += '==';\n\t\t}\n\t\telse if (data.length % 3 === 2) {\n\t\t\tlet encoded = data[i++] << 16 | data[i++] << 8;\n\t\t\tdecoded += BASE64_KEYSTR.charAt((encoded >>> 18) & 0x3f);\n\t\t\tdecoded += BASE64_KEYSTR.charAt((encoded >>> 12) & 0x3f);\n\t\t\tdecoded += BASE64_KEYSTR.charAt((encoded >>> 6) & 0x3f);\n\t\t\tdecoded += '=';\n\t\t}\n\n\t\treturn decoded;\n\t}\n};\n\n/**\n * Provides facilities for encoding a string into a hex-encoded byte buffer and\n * decoding a hex-encoded byte buffer into a string.\n */\nexport const hex: Codec = {\n\t/**\n\t * Encodes a string into a hex-encoded byte buffer.\n\t *\n\t * @param data The hex-encoded string to encode\n\t */\n\tencode(data: string): number[] {\n\t\tif (data == null) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst buffer: number[] = [];\n\n\t\tfor (let i = 0, length = data.length; i < length; i += 2) {\n\t\t\tlet encodedChar = parseInt(data.substr(i, 2), 16);\n\n\t\t\tbuffer.push(encodedChar);\n\t\t}\n\n\t\treturn buffer;\n\t},\n\n\t/**\n\t * Decodes a hex-encoded byte buffer into a hex-encoded string.\n\t *\n\t * @param data The byte buffer to decode\n\t */\n\tdecode(data: ByteBuffer): string {\n\t\tif (data == null) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet decoded = '';\n\n\t\tfor (let i = 0, length = data.length; i < length; i++) {\n\t\t\tdecoded += data[i].toString(16).toUpperCase();\n\t\t}\n\n\t\treturn decoded;\n\t}\n};\n\n/**\n * Provides facilities for encoding a string into a UTF-8-encoded byte buffer and\n * decoding a UTF-8-encoded byte buffer into a string.\n * Inspired by the work of: https://github.com/mathiasbynens/utf8.js\n */\nexport const utf8: Codec = {\n\t/**\n\t * Encodes a string into a UTF-8-encoded byte buffer.\n\t *\n\t * @param data The text string to encode\n\t */\n\tencode(data: string): number[] {\n\t\tif (data == null) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst buffer: number[] = [];\n\n\t\tfor (let i = 0, length = data.length; i < length; i++) {\n\t\t\tlet encodedChar = data.charCodeAt(i);\n\n\t\t\t/**\n\t\t\t * Surrogates\n\t\t\t * http://en.wikipedia.org/wiki/Universal_Character_Set_characters\n\t\t\t */\n\t\t\tif (encodedChar >= HIGH_SURROGATE_MIN && encodedChar <= HIGH_SURROGATE_MAX) {\n\t\t\t\tlet lowSurrogate = data.charCodeAt(i + 1);\n\t\t\t\tif (lowSurrogate >= LOW_SURROGATE_MIN && lowSurrogate <= LOW_SURROGATE_MAX) {\n\t\t\t\t\tencodedChar = 0x010000 + (encodedChar - HIGH_SURROGATE_MIN) * 0x0400 + (lowSurrogate - LOW_SURROGATE_MIN);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (encodedChar < 0x80) {\n\t\t\t\tbuffer.push(encodedChar);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (encodedChar < 0x800) {\n\t\t\t\t\tbuffer.push(((encodedChar >> 0x06) & 0x1F) | 0xC0);\n\t\t\t\t}\n\t\t\t\telse if (encodedChar < 0x010000) {\n\t\t\t\t\tif (encodedChar >= HIGH_SURROGATE_MIN && encodedChar <= LOW_SURROGATE_MAX) {\n\t\t\t\t\t\tthrow Error('Surrogate is not a scalar value');\n\t\t\t\t\t}\n\n\t\t\t\t\tbuffer.push(((encodedChar >> 0x0C) & 0x0F) | 0xE0);\n\t\t\t\t\tbuffer.push(((encodedChar >> 0x06) & 0x3F) | 0x80);\n\t\t\t\t}\n\t\t\t\telse if (encodedChar < 0x200000) {\n\t\t\t\t\tbuffer.push(((encodedChar >> 0x12) & 0x07) | 0xF0);\n\t\t\t\t\tbuffer.push(((encodedChar >> 0x0C) & 0x3F) | 0x80);\n\t\t\t\t\tbuffer.push(((encodedChar >> 0x06) & 0x3F) | 0x80);\n\t\t\t\t}\n\t\t\t\tbuffer.push((encodedChar & 0x3F) | 0x80);\n\t\t\t}\n\t\t}\n\n\t\treturn buffer;\n\t},\n\n\t/**\n\t * Decodes a UTF-8-encoded byte buffer into a string.\n\t *\n\t * @param data The byte buffer to decode\n\t */\n\tdecode(data: ByteBuffer): string {\n\t\tif (data == null) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet decoded = '';\n\n\t\tfor (let i = 0, length = data.length; i < length; i++) {\n\t\t\tlet byte1 = data[i] & 0xFF;\n\n\t\t\tif ((byte1 & 0x80) === 0) {\n\t\t\t\tdecoded += decodeUtf8EncodedCodePoint(byte1);\n\t\t\t}\n\t\t\telse if ((byte1 & 0xE0) === 0xC0) {\n\t\t\t\tlet byte2 = data[++i] & 0xFF;\n\t\t\t\tvalidateUtf8EncodedCodePoint(byte2);\n\t\t\t\tbyte2 = byte2 & 0x3F;\n\t\t\t\tlet encodedByte = ((byte1 & 0x1F) << 0x06) | byte2;\n\t\t\t\tdecoded += decodeUtf8EncodedCodePoint(encodedByte, [0x80, Infinity]);\n\t\t\t}\n\t\t\telse if ((byte1 & 0xF0) === 0xE0) {\n\t\t\t\tlet byte2 = data[++i] & 0xFF;\n\t\t\t\tvalidateUtf8EncodedCodePoint(byte2);\n\t\t\t\tbyte2 = byte2 & 0x3F;\n\n\t\t\t\tlet byte3 = data[++i] & 0xFF;\n\t\t\t\tvalidateUtf8EncodedCodePoint(byte3);\n\t\t\t\tbyte3 = byte3 & 0x3F;\n\n\t\t\t\tlet encodedByte = ((byte1 & 0x1F) << 0x0C) | (byte2 << 0x06) | byte3;\n\t\t\t\tdecoded += decodeUtf8EncodedCodePoint(encodedByte, [ 0x0800, Infinity ], true);\n\t\t\t}\n\t\t\telse if ((byte1 & 0xF8) === 0xF0) {\n\t\t\t\tlet byte2 = data[++i] & 0xFF;\n\t\t\t\tvalidateUtf8EncodedCodePoint(byte2);\n\t\t\t\tbyte2 = byte2 & 0x3F;\n\n\t\t\t\tlet byte3 = data[++i] & 0xFF;\n\t\t\t\tvalidateUtf8EncodedCodePoint(byte3);\n\t\t\t\tbyte3 = byte3 & 0x3F;\n\n\t\t\t\tlet byte4 = data[++i] & 0xFF;\n\t\t\t\tvalidateUtf8EncodedCodePoint(byte4);\n\t\t\t\tbyte4 = byte4 & 0x3F;\n\n\t\t\t\tlet encodedByte = ((byte1 & 0x1F) << 0x0C) | (byte2 << 0x0C) | (byte3 << 0x06) | byte4;\n\t\t\t\tdecoded += decodeUtf8EncodedCodePoint(encodedByte, [ 0x010000, 0x10FFFF ]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalidateUtf8EncodedCodePoint(byte1);\n\t\t\t}\n\t\t}\n\n\t\treturn decoded;\n\t}\n};\n"]}