{"version":3,"file":"Evented.js","sourceRoot":"","sources":["../../src/Evented.ts"],"names":[],"mappings":";;;;;;;;;IACA,uBAAmB,UAAU,CAAC,CAAA;IAE9B;QAAA;QA+BA,CAAC;QA9BA;;;WAGG;QACH,sBAAI,GAAJ,UAA4B,IAAO;YAClC,IAAM,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;YAChC,IAAM,MAAM,GAAoB,IAAK,CAAC,IAAI,CAAC,CAAC;YAC5C,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACZ,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACzB,CAAC;QACF,CAAC;QAED;;;;;WAKG;QACH,oBAAE,GAAF,UAAG,IAAY,EAAE,QAAsC;YACtD,IAAM,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC;YAC3B,EAAE,CAAC,CAAC,CAAQ,IAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzB,6CAA6C;gBAC7C,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE;oBACjC,YAAY,EAAE,IAAI;oBAClB,KAAK,EAAE,SAAS;oBAChB,QAAQ,EAAE,IAAI;iBACd,CAAC,CAAC;YACJ,CAAC;YACD,MAAM,CAAC,WAAE,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QACjC,CAAC;QACF,cAAC;IAAD,CAAC,AA/BD,IA+BC;IA/BD;6BA+BC,CAAA","sourcesContent":["import { Handle, EventObject } from './interfaces';\nimport { on } from './aspect';\n\nexport default class Evented {\n\t/**\n\t * Emits an event, firing listeners registered for it.\n\t * @param event The event object to emit\n\t */\n\temit<T extends EventObject>(data: T): void {\n\t\tconst type = '__on' + data.type;\n\t\tconst method: Function = (<any> this)[type];\n\t\tif (method) {\n\t\t\tmethod.call(this, data);\n\t\t}\n\t}\n\n\t/**\n\t * Listens for an event, calling the listener whenever the event fires.\n\t * @param type Event type to listen for\n\t * @param listener Callback to handle the event when it fires\n\t * @return A handle which will remove the listener when destroy is called\n\t */\n\ton(type: string, listener: (event: EventObject) => void): Handle {\n\t\tconst name = '__on' + type;\n\t\tif (!(<any> this)[name]) {\n\t\t\t// define a non-enumerable property (see #77)\n\t\t\tObject.defineProperty(this, name, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: undefined,\n\t\t\t\twritable: true\n\t\t\t});\n\t\t}\n\t\treturn on(this, name, listener);\n\t}\n}\n"]}